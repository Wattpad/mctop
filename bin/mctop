#!/usr/bin/env ruby

# mctop - A command line memcached traffic analyzer
# 
# Author:: Marcus Barczak (<marcus@etsy.com>)

$:.unshift File.join(File.dirname(__FILE__),'..','lib')

require 'rubygems'
require 'cmdline'
require 'sniffer'
require 'ui'
require 'json'

@config = CmdLine.parse(ARGV)

sniffer = MemcacheSniffer.new(@config)

# kick the sniffer thread off
sniff_thread = Thread.new { sniffer.start }

if @config[:json_output]
  time = @config[:capture_time]
  $stderr.puts "Capturing traffic for #{time} second(s)..."
  sleep time
  metrics = sniffer.metrics.values.sort_by { |v| v[@config[:sort_mode]] }.reverse.first(@config[:max_items])
  puts JSON::generate(metrics)

else
  ui = UI.new(@config, sniffer)

  # trap most of the typical signals
  %w[ INT QUIT HUP KILL ].each do |sig|
    Signal.trap(sig) do
      puts "** Caught signal #{sig} - exiting"
      ui.done
    end
  end
  ui.run(sniffer)
end

sniffer.done

## if sniffer thread doesn't join immediately kill it off the
## capture.each loop blocks if no packets have been seen
if sniff_thread.join(0)
  sniff_thread.kill
end
